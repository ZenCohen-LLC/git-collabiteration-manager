#!/bin/bash

# {{ITERATION_NAME}} Iteration Status Check
# This script checks the status of all services for the {{ITERATION_NAME}} iteration

echo "üîç Checking {{ITERATION_NAME}} Iteration Status..."
echo ""

# Navigate to the correct directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR/.."

# Check Docker
echo "üê≥ Docker Status:"
if docker info > /dev/null 2>&1; then
    echo "   ‚úÖ Docker is running"
    
    # Check database container
    if docker ps | grep -q {{ITERATION_NAME}}.*postgres; then
        echo "   ‚úÖ Database container is running"
        
        # Check if database is healthy
        if docker compose -f docker-compose.{{ITERATION_NAME}}.yml ps postgres | grep -q "healthy"; then
            echo "   ‚úÖ Database is healthy"
        else
            echo "   ‚ö†Ô∏è  Database is not healthy"
        fi
    else
        echo "   ‚ùå Database container is not running"
    fi
else
    echo "   ‚ùå Docker is not running"
fi

echo ""
echo "üîß Backend Status:"
if ps aux | grep -v grep | grep -q "bun.*{{BACKEND_PORT}}"; then
    echo "   ‚úÖ Backend process is running"
    
    # Check API endpoint
    if curl -s http://localhost:{{BACKEND_PORT}}/api/users/me > /dev/null 2>&1; then
        echo "   ‚úÖ Backend API is responding"
    else
        echo "   ‚ö†Ô∏è  Backend API is not responding"
    fi
else
    echo "   ‚ùå Backend process is not running"
fi

echo ""
echo "üé® Frontend Status:"
if ps aux | grep -v grep | grep -q "vite.*{{FRONTEND_PORT}}"; then
    echo "   ‚úÖ Frontend process is running"
    
    # Check frontend endpoint
    if curl -s http://localhost:{{FRONTEND_PORT}}/ > /dev/null 2>&1; then
        echo "   ‚úÖ Frontend is responding"
    else
        echo "   ‚ö†Ô∏è  Frontend is not responding"
    fi
else
    echo "   ‚ùå Frontend process is not running"
fi

echo ""
echo "üìä Summary:"
echo "   Frontend URL: http://localhost:{{FRONTEND_PORT}}/"
echo "   Backend API: http://localhost:{{BACKEND_PORT}}/api/"
echo "   Database: localhost:{{DB_PORT}}"

echo ""
echo "üìù Log Files:"
if [ -f backend.log ]; then
    echo "   Backend log: ./backend.log ($(wc -l < backend.log) lines)"
else
    echo "   Backend log: Not found"
fi

if [ -f frontend.log ]; then
    echo "   Frontend log: ./frontend.log ($(wc -l < frontend.log) lines)"
else
    echo "   Frontend log: Not found"
fi

echo ""
echo "üí° Commands:"
echo "   Start all services: ./scripts/start-iteration.sh"
echo "   Stop all services: ./scripts/stop-iteration.sh"
echo "   View backend logs: tail -f backend.log"
echo "   View frontend logs: tail -f frontend.log"